{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Heading/index.js","components/Navbar/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","shuffleAndScore","id","alt","name","src","image","Wrapper","children","Heading","Navbar","status","score","topScore","App","state","friends","clickedFriend","_this","indexOf","push","handleIncrement","sort","Math","random","setState","_this2","this","components_Wrapper","components_Navbar","components_Heading","map","friend","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"imFAaeA,MAVf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,gBAAgBN,EAAMO,MAC/DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,iBCA1BC,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCG1BC,MAJf,SAAiBd,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,EAAMa,iBCYxBE,MAbf,SAAgBf,GACd,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAClBH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,eACAH,EAAAC,EAAAC,cAAA,UAAKH,EAAMgB,QACXf,EAAAC,EAAAC,cAAA,oBAAYH,EAAMiB,MAAlB,iBAAuCjB,EAAMkB,qBC8FpCC,6MA9FbC,MAAQ,CACNC,UACAJ,MAAO,EACPC,SAAU,EACVI,cAAe,GACfN,OAAQ,8BAIVV,gBAAkB,SAAAC,GAEhB,IAAIe,EAAgBC,EAAKH,MAAME,eAOI,IAA/BA,EAAcE,QAAQjB,IACxBe,EAAcG,KAAKlB,GACnBgB,EAAKG,kBACLH,EAAKH,MAAMC,QAAQM,KAAK,kBAAMC,KAAKC,SAAW,KAGlB,KAArBN,EAAKH,MAAMH,MAClBM,EAAKO,SAAS,CACZb,MAAO,EACPK,cAAe,GACfN,OAAQ,4CAKVO,EAAKO,SAAS,CACZb,MAAO,EACPK,cAAe,GACfN,OAAQ,4BAEVO,EAAKH,MAAMC,QAAQM,KAAK,kBAAMC,KAAKC,SAAW,QAYlDH,gBAAkB,WAChB,IAAIT,EAAQM,EAAKH,MAAMH,MAGnBA,EAFWM,EAAKH,MAAMF,UAGxBK,EAAKO,SAAS,CACZZ,SAAUD,EAAQ,IAGtBM,EAAKO,SAAS,CACZd,OAAQ,wBACRC,MAAOM,EAAKH,MAAMH,MAAQ,6EAKrB,IAAAc,EAAAC,KACP,OAEE/B,EAAAC,EAAAC,cAAC8B,EAAD,KAEEhC,EAAAC,EAAAC,cAAC+B,EAAD,CAAQjB,MAAOe,KAAKZ,MAAMH,MAAOD,OAAQgB,KAAKZ,MAAMJ,OAAQE,SAAUc,KAAKZ,MAAMF,WAIjFjB,EAAAC,EAAAC,cAACgC,EAAD,KACElC,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,sFAID6B,KAAKZ,MAAMC,QAAQe,IAAI,SAAAC,GAAM,OAC5BpC,EAAAC,EAAAC,cAACmC,EAAD,CACEhC,gBAAiByB,EAAKzB,gBACtBC,GAAI8B,EAAO9B,GACXgC,IAAKF,EAAO9B,GACZI,MAAO0B,EAAO1B,kBAxFR6B,mBCFlBC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.fafadd71.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\" onClick={() => props.shuffleAndScore(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Heading(props) {\n  return <div className=\"title\">{props.children}</div>;\n}\n\nexport default Heading;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n  return <div className=\"navbar\">\n      <nav>\n      <ul>\n      <ul className=\"brand\">Clicky Game</ul>\n      <ul>{props.status}</ul>\n      <ul>Score: {props.score} | Top Score: {props.topScore}</ul>\n\n  </ul>\n      </nav>\n  </div>\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Heading from \"./components/Heading\";\nimport Navbar from \"./components/Navbar\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    topScore: 0,\n    clickedFriend: [],\n    status: \"Click an image to begin!\"\n  };\n\n\n  shuffleAndScore = id => {\n    // Assign state\n    let clickedFriend = this.state.clickedFriend;\n    // let score = this.state.score;\n    // let topScore = this.state.topScore;\n\n\n    //If id hasn't got chosen (not in array), push id to array\n    //and shuffle cards\n    if (clickedFriend.indexOf(id) === -1) {\n      clickedFriend.push(id);\n      this.handleIncrement();\n      this.state.friends.sort(() => Math.random() - 1);\n    }\n    //If user has guessed correctly all 12 cards, reset state\n    else if (this.state.score === 12) {\n      this.setState({\n        score: 0,\n        clickedFriend: [],\n        status: \"You won!!! Click an image to try again\"\n      })\n    }\n    //Otherwise, reset state and alert user that they guessed wrong then shuffle cards\n    else {\n      this.setState({\n        score: 0,\n        clickedFriend: [],\n        status: \"You guessed incorrectly\"\n      })\n      this.state.friends.sort(() => Math.random() - 1);\n    }\n\n    // //If score is higher than top Score, update top score to cscurrent score\n    // if (score > topScore) {\n    //   this.setState({\n    //     topScore: score + 1\n    //   })\n    // }\n  }\n\n  //Everytime user guesses right, add point to score\n  handleIncrement = () => {\n    let score = this.state.score;\n    let topScore = this.state.topScore;\n    //If score is higher than top Score, update top score to cscurrent score\n    if (score > topScore) {\n      this.setState({\n        topScore: score + 1\n      })\n    }\n    this.setState({\n      status: \"You guessed correctly\",\n      score: this.state.score + 1\n    });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n\n      <Wrapper>\n        {/* This is where points and game staus show */}\n        <Navbar score={this.state.score} status={this.state.status} topScore={this.state.topScore}>\n\n        </Navbar>\n\n        <Heading>\n          <h4>Clicky Game!</h4>\n          <h5>Click on an image to earn points, but don't click on any more than once</h5>\n        </Heading>\n\n        {/* assign value to each card */}\n        {this.state.friends.map(friend => (\n          <FriendCard\n            shuffleAndScore={this.shuffleAndScore}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}